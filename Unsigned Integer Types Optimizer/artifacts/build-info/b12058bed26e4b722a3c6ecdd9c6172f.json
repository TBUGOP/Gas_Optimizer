{
	"id": "b12058bed26e4b722a3c6ecdd9c6172f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.4",
	"solcLongVersion": "0.8.4+commit.c7e474f2",
	"input": {
		"language": "Solidity",
		"sources": {
			"Unsigned Integer Types Optimizer/test23.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.4;\n\ncontract Auction {\n    address public owner;\n    uint256 public highestBid;\n    address public highestBidder;\n\n    constructor() {\n        owner = msg.sender;\n        highestBid = 0;\n        highestBidder = address(0);\n    }\n\n    function bid() public payable {\n        require(msg.value > highestBid, \"Bid amount should be greater than highest bid.\");\n        require(msg.sender != owner, \"Owner cannot place a bid.\");\n        highestBid = msg.value;\n        highestBidder = msg.sender;\n    }\n\n    function checkNonZero(uint256 x) public pure {\n        require(x != 0);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Unsigned Integer Types Optimizer/test23.sol": {
				"Auction": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "bid",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "x",
									"type": "uint256"
								}
							],
							"name": "checkNonZero",
							"outputs": [],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "highestBid",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "highestBidder",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Unsigned Integer Types Optimizer/test23.sol\":56:634  contract Auction {... */\n  mstore(0x40, 0x80)\n    /* \"Unsigned Integer Types Optimizer/test23.sol\":171:280  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Unsigned Integer Types Optimizer/test23.sol\":195:200  owner */\n  0x00\n    /* \"Unsigned Integer Types Optimizer/test23.sol\":195:213  owner = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  dup2\n  and\n    /* \"Unsigned Integer Types Optimizer/test23.sol\":203:213  msg.sender */\n  caller\n    /* \"Unsigned Integer Types Optimizer/test23.sol\":195:213  owner = msg.sender */\n  or\n  dup3\n  sstore\n  0x01\n    /* \"Unsigned Integer Types Optimizer/test23.sol\":223:237  highestBid = 0 */\n  swap2\n  swap1\n  swap2\n  sstore\n    /* \"Unsigned Integer Types Optimizer/test23.sol\":247:260  highestBidder */\n  0x02\n    /* \"Unsigned Integer Types Optimizer/test23.sol\":247:273  highestBidder = address(0) */\n  dup1\n  sload\n  swap1\n  swap2\n  and\n  swap1\n  sstore\n    /* \"Unsigned Integer Types Optimizer/test23.sol\":56:634  contract Auction {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Unsigned Integer Types Optimizer/test23.sol\":56:634  contract Auction {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1998aeef\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x91f90157\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xc5cafc2a\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xd57bde79\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Unsigned Integer Types Optimizer/test23.sol\":286:549  function bid() public payable {... */\n    tag_2:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      stop\n        /* \"Unsigned Integer Types Optimizer/test23.sol\":79:99  address public owner */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_9:\n      pop\n      sload(0x00)\n      tag_10\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_10:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":373:405   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":355:406   */\n      dup2\n      mstore\n        /* \"#utility.yul\":343:345   */\n      0x20\n        /* \"#utility.yul\":328:346   */\n      add\n        /* \"Unsigned Integer Types Optimizer/test23.sol\":79:99  address public owner */\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Unsigned Integer Types Optimizer/test23.sol\":136:164  address public highestBidder */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      pop\n      sload(0x02)\n      tag_10\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"Unsigned Integer Types Optimizer/test23.sol\":555:632  function checkNonZero(uint256 x) public pure {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      pop\n      tag_7\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n        /* \"Unsigned Integer Types Optimizer/test23.sol\":105:130  uint256 public highestBid */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      tag_24\n      sload(0x01)\n      dup2\n      jump\n    tag_24:\n      mload(0x40)\n        /* \"#utility.yul\":1332:1357   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1320:1322   */\n      0x20\n        /* \"#utility.yul\":1305:1323   */\n      add\n        /* \"Unsigned Integer Types Optimizer/test23.sol\":105:130  uint256 public highestBid */\n      tag_12\n        /* \"#utility.yul\":1287:1363   */\n      jump\n        /* \"Unsigned Integer Types Optimizer/test23.sol\":286:549  function bid() public payable {... */\n    tag_8:\n        /* \"Unsigned Integer Types Optimizer/test23.sol\":346:356  highestBid */\n      sload(0x01)\n        /* \"Unsigned Integer Types Optimizer/test23.sol\":334:343  msg.value */\n      callvalue\n        /* \"Unsigned Integer Types Optimizer/test23.sol\":334:356  msg.value > highestBid */\n      gt\n        /* \"Unsigned Integer Types Optimizer/test23.sol\":326:407  require(msg.value > highestBid, \"Bid amount should be greater than highest bid.\") */\n      tag_29\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":973:975   */\n      0x20\n        /* \"Unsigned Integer Types Optimizer/test23.sol\":326:407  require(msg.value > highestBid, \"Bid amount should be greater than highest bid.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":955:976   */\n      mstore\n        /* \"#utility.yul\":1012:1014   */\n      0x2e\n        /* \"#utility.yul\":992:1010   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":985:1015   */\n      mstore\n        /* \"#utility.yul\":1051:1085   */\n      0x42696420616d6f756e742073686f756c64206265206772656174657220746861\n        /* \"#utility.yul\":1031:1049   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1024:1086   */\n      mstore\n      shl(0x91, 0x37103434b3b432b9ba103134b217)\n        /* \"#utility.yul\":1102:1120   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":1095:1139   */\n      mstore\n        /* \"#utility.yul\":1156:1175   */\n      0x84\n      add\n        /* \"Unsigned Integer Types Optimizer/test23.sol\":326:407  require(msg.value > highestBid, \"Bid amount should be greater than highest bid.\") */\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_29:\n        /* \"Unsigned Integer Types Optimizer/test23.sol\":439:444  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"Unsigned Integer Types Optimizer/test23.sol\":425:435  msg.sender */\n      caller\n        /* \"Unsigned Integer Types Optimizer/test23.sol\":425:444  msg.sender != owner */\n      eq\n      iszero\n        /* \"Unsigned Integer Types Optimizer/test23.sol\":417:474  require(msg.sender != owner, \"Owner cannot place a bid.\") */\n      tag_32\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":619:621   */\n      0x20\n        /* \"Unsigned Integer Types Optimizer/test23.sol\":417:474  require(msg.sender != owner, \"Owner cannot place a bid.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":601:622   */\n      mstore\n        /* \"#utility.yul\":658:660   */\n      0x19\n        /* \"#utility.yul\":638:656   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":631:661   */\n      mstore\n        /* \"#utility.yul\":697:724   */\n      0x4f776e65722063616e6e6f7420706c6163652061206269642e00000000000000\n        /* \"#utility.yul\":677:695   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":670:725   */\n      mstore\n        /* \"#utility.yul\":742:760   */\n      0x64\n      add\n        /* \"Unsigned Integer Types Optimizer/test23.sol\":417:474  require(msg.sender != owner, \"Owner cannot place a bid.\") */\n      tag_30\n        /* \"#utility.yul\":591:766   */\n      jump\n        /* \"Unsigned Integer Types Optimizer/test23.sol\":417:474  require(msg.sender != owner, \"Owner cannot place a bid.\") */\n    tag_32:\n        /* \"Unsigned Integer Types Optimizer/test23.sol\":497:506  msg.value */\n      callvalue\n        /* \"Unsigned Integer Types Optimizer/test23.sol\":484:494  highestBid */\n      0x01\n        /* \"Unsigned Integer Types Optimizer/test23.sol\":484:506  highestBid = msg.value */\n      sstore\n        /* \"Unsigned Integer Types Optimizer/test23.sol\":516:529  highestBidder */\n      0x02\n        /* \"Unsigned Integer Types Optimizer/test23.sol\":516:542  highestBidder = msg.sender */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n        /* \"Unsigned Integer Types Optimizer/test23.sol\":532:542  msg.sender */\n      caller\n        /* \"Unsigned Integer Types Optimizer/test23.sol\":516:542  highestBidder = msg.sender */\n      or\n      swap1\n      sstore\n        /* \"Unsigned Integer Types Optimizer/test23.sol\":286:549  function bid() public payable {... */\n      jump\t// out\n        /* \"Unsigned Integer Types Optimizer/test23.sol\":555:632  function checkNonZero(uint256 x) public pure {... */\n    tag_22:\n        /* \"Unsigned Integer Types Optimizer/test23.sol\":618:624  x != 0 */\n      dup1\n        /* \"Unsigned Integer Types Optimizer/test23.sol\":610:625  require(x != 0) */\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n        /* \"Unsigned Integer Types Optimizer/test23.sol\":555:632  function checkNonZero(uint256 x) public pure {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:204   */\n    tag_21:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:96   */\n      iszero\n      tag_39\n      jumpi\n        /* \"#utility.yul\":147:153   */\n      dup1\n        /* \"#utility.yul\":139:145   */\n      dup2\n        /* \"#utility.yul\":132:154   */\n      revert\n        /* \"#utility.yul\":94:96   */\n    tag_39:\n      pop\n        /* \"#utility.yul\":175:198   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":84:204   */\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a2821713b2cf6942c56193ead174656c0ecc36f15b0c58b3d2ca35998d978d6464736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600080546001600160a01b031990811633178255600191909155600280549091169055610235806100436000396000f3fe60806040526004361061004a5760003560e01c80631998aeef1461004f5780638da5cb5b1461005957806391f9015714610096578063c5cafc2a146100b6578063d57bde79146100d6575b600080fd5b6100576100fa565b005b34801561006557600080fd5b50600054610079906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100a257600080fd5b50600254610079906001600160a01b031681565b3480156100c257600080fd5b506100576100d13660046101e7565b6101da565b3480156100e257600080fd5b506100ec60015481565b60405190815260200161008d565b60015434116101675760405162461bcd60e51b815260206004820152602e60248201527f42696420616d6f756e742073686f756c6420626520677265617465722074686160448201526d37103434b3b432b9ba103134b21760911b60648201526084015b60405180910390fd5b6000546001600160a01b03163314156101c25760405162461bcd60e51b815260206004820152601960248201527f4f776e65722063616e6e6f7420706c6163652061206269642e00000000000000604482015260640161015e565b34600155600280546001600160a01b03191633179055565b806101e457600080fd5b50565b6000602082840312156101f8578081fd5b503591905056fea2646970667358221220a2821713b2cf6942c56193ead174656c0ecc36f15b0c58b3d2ca35998d978d6464736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND CALLER OR DUP3 SSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH2 0x235 DUP1 PUSH2 0x43 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1998AEEF EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x91F90157 EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0xC5CAFC2A EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0xD57BDE79 EQ PUSH2 0xD6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x57 PUSH2 0xFA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x79 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x79 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x57 PUSH2 0xD1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E7 JUMP JUMPDEST PUSH2 0x1DA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEC PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x8D JUMP JUMPDEST PUSH1 0x1 SLOAD CALLVALUE GT PUSH2 0x167 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42696420616D6F756E742073686F756C64206265206772656174657220746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x37103434B3B432B9BA103134B217 PUSH1 0x91 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO PUSH2 0x1C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E65722063616E6E6F7420706C6163652061206269642E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x15E JUMP JUMPDEST CALLVALUE PUSH1 0x1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH2 0x1E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F8 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 DUP3 OR SGT 0xB2 0xCF PUSH10 0x42C56193EAD174656C0E 0xCC CALLDATASIZE CALL JUMPDEST 0xC PC 0xB3 0xD2 0xCA CALLDATALOAD SWAP10 DUP14 SWAP8 DUP14 PUSH5 0x64736F6C63 NUMBER STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "56:578:0:-:0;;;171:109;;;;;;;;;-1:-1:-1;195:5:0;:18;;-1:-1:-1;;;;;;195:18:0;;;203:10;195:18;;;;223:14;;;;247:13;:26;;;;;;;56:578;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1365:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:120:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "139:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "147:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:1"
															},
															"nodeType": "YulIf",
															"src": "94:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "165:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "188:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "175:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "175:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:1",
														"type": ""
													}
												],
												"src": "14:190:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "310:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "320:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "332:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "343:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "328:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "328:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "320:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "377:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "393:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "398:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "389:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "389:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "402:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "385:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "385:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "373:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "373:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "355:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "355:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "355:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "279:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "290:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "301:4:1",
														"type": ""
													}
												],
												"src": "209:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "591:175:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "608:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "619:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "601:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "601:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "601:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "642:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "653:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "638:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "638:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "658:2:1",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "631:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "631:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "631:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "681:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "692:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "677:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "677:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "697:27:1",
																		"type": "",
																		"value": "Owner cannot place a bid."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "670:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "670:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "670:55:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "734:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "746:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "757:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "742:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "742:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "734:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a93add91eb37767ab66dfdeca5103d0aeeb3c19641a8bfebbf815b374db1986a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "568:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "582:4:1",
														"type": ""
													}
												],
												"src": "417:349:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "945:236:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "962:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "973:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "955:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "955:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "955:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "996:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1007:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "992:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "992:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1012:2:1",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "985:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "985:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "985:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1035:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1046:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1031:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1031:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1051:34:1",
																		"type": "",
																		"value": "Bid amount should be greater tha"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1024:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1024:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1024:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1106:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1117:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1102:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1102:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1122:16:1",
																		"type": "",
																		"value": "n highest bid."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1095:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1095:44:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1095:44:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1148:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1160:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1171:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1156:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1156:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1148:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_efc563b815b2f6c418998c58d025884753717a2015320b884119923ec285e294__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "922:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "936:4:1",
														"type": ""
													}
												],
												"src": "771:410:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1287:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1297:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1309:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1320:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1305:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1305:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1297:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1339:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1350:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1332:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1332:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1332:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1256:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1267:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1278:4:1",
														"type": ""
													}
												],
												"src": "1186:177:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_a93add91eb37767ab66dfdeca5103d0aeeb3c19641a8bfebbf815b374db1986a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Owner cannot place a bid.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_efc563b815b2f6c418998c58d025884753717a2015320b884119923ec285e294__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Bid amount should be greater tha\")\n        mstore(add(headStart, 96), \"n highest bid.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061004a5760003560e01c80631998aeef1461004f5780638da5cb5b1461005957806391f9015714610096578063c5cafc2a146100b6578063d57bde79146100d6575b600080fd5b6100576100fa565b005b34801561006557600080fd5b50600054610079906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100a257600080fd5b50600254610079906001600160a01b031681565b3480156100c257600080fd5b506100576100d13660046101e7565b6101da565b3480156100e257600080fd5b506100ec60015481565b60405190815260200161008d565b60015434116101675760405162461bcd60e51b815260206004820152602e60248201527f42696420616d6f756e742073686f756c6420626520677265617465722074686160448201526d37103434b3b432b9ba103134b21760911b60648201526084015b60405180910390fd5b6000546001600160a01b03163314156101c25760405162461bcd60e51b815260206004820152601960248201527f4f776e65722063616e6e6f7420706c6163652061206269642e00000000000000604482015260640161015e565b34600155600280546001600160a01b03191633179055565b806101e457600080fd5b50565b6000602082840312156101f8578081fd5b503591905056fea2646970667358221220a2821713b2cf6942c56193ead174656c0ecc36f15b0c58b3d2ca35998d978d6464736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1998AEEF EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x91F90157 EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0xC5CAFC2A EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0xD57BDE79 EQ PUSH2 0xD6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x57 PUSH2 0xFA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x79 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x79 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x57 PUSH2 0xD1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E7 JUMP JUMPDEST PUSH2 0x1DA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEC PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x8D JUMP JUMPDEST PUSH1 0x1 SLOAD CALLVALUE GT PUSH2 0x167 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42696420616D6F756E742073686F756C64206265206772656174657220746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x37103434B3B432B9BA103134B217 PUSH1 0x91 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO PUSH2 0x1C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E65722063616E6E6F7420706C6163652061206269642E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x15E JUMP JUMPDEST CALLVALUE PUSH1 0x1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH2 0x1E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F8 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 DUP3 OR SGT 0xB2 0xCF PUSH10 0x42C56193EAD174656C0E 0xCC CALLDATASIZE CALL JUMPDEST 0xC PC 0xB3 0xD2 0xCA CALLDATALOAD SWAP10 DUP14 SWAP8 DUP14 PUSH5 0x64736F6C63 NUMBER STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "56:578:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;286:263;;;:::i;:::-;;79:20;;;;;;;;;;-1:-1:-1;79:20:0;;;;-1:-1:-1;;;;;79:20:0;;;;;;-1:-1:-1;;;;;373:32:1;;;355:51;;343:2;328:18;79:20:0;;;;;;;;136:28;;;;;;;;;;-1:-1:-1;136:28:0;;;;-1:-1:-1;;;;;136:28:0;;;555:77;;;;;;;;;;-1:-1:-1;555:77:0;;;;;:::i;:::-;;:::i;105:25::-;;;;;;;;;;;;;;;;;;;1332::1;;;1320:2;1305:18;105:25:0;1287:76:1;286:263:0;346:10;;334:9;:22;326:81;;;;-1:-1:-1;;;326:81:0;;973:2:1;326:81:0;;;955:21:1;1012:2;992:18;;;985:30;1051:34;1031:18;;;1024:62;-1:-1:-1;;;1102:18:1;;;1095:44;1156:19;;326:81:0;;;;;;;;;439:5;;-1:-1:-1;;;;;439:5:0;425:10;:19;;417:57;;;;-1:-1:-1;;;417:57:0;;619:2:1;417:57:0;;;601:21:1;658:2;638:18;;;631:30;697:27;677:18;;;670:55;742:18;;417:57:0;591:175:1;417:57:0;497:9;484:10;:22;516:13;:26;;-1:-1:-1;;;;;;516:26:0;532:10;516:26;;;286:263::o;555:77::-;618:6;610:15;;;;;;555:77;:::o;14:190:1:-;73:6;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;-1:-1:-1;175:23:1;;84:120;-1:-1:-1;84:120:1:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "113000",
								"executionCost": "46830",
								"totalCost": "159830"
							},
							"external": {
								"bid()": "42603",
								"checkNonZero(uint256)": "284",
								"highestBid()": "1061",
								"highestBidder()": "1048",
								"owner()": "1026"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 56,
									"end": 634,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 56,
									"end": 634,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 56,
									"end": 634,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 171,
									"end": 280,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 171,
									"end": 280,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 171,
									"end": 280,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 171,
									"end": 280,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 171,
									"end": 280,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 171,
									"end": 280,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 171,
									"end": 280,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 171,
									"end": 280,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 171,
									"end": 280,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 171,
									"end": 280,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 195,
									"end": 200,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 213,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 195,
									"end": 213,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 195,
									"end": 213,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 195,
									"end": 213,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 195,
									"end": 213,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 203,
									"end": 213,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 195,
									"end": 213,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 195,
									"end": 213,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 195,
									"end": 213,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 195,
									"end": 213,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 223,
									"end": 237,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 223,
									"end": 237,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 223,
									"end": 237,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 223,
									"end": 237,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 247,
									"end": 260,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 247,
									"end": 273,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 247,
									"end": 273,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 247,
									"end": 273,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 247,
									"end": 273,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 247,
									"end": 273,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 247,
									"end": 273,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 247,
									"end": 273,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 56,
									"end": 634,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56,
									"end": 634,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 56,
									"end": 634,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56,
									"end": 634,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 634,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 56,
									"end": 634,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 634,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a2821713b2cf6942c56193ead174656c0ecc36f15b0c58b3d2ca35998d978d6464736f6c63430008040033",
									".code": [
										{
											"begin": 56,
											"end": 634,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 56,
											"end": 634,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56,
											"end": 634,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56,
											"end": 634,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56,
											"end": 634,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 56,
											"end": 634,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 56,
											"end": 634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 56,
											"end": 634,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56,
											"end": 634,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 634,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 56,
											"end": 634,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 56,
											"end": 634,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 56,
											"end": 634,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56,
											"end": 634,
											"name": "PUSH",
											"source": 0,
											"value": "1998AEEF"
										},
										{
											"begin": 56,
											"end": 634,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56,
											"end": 634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 56,
											"end": 634,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56,
											"end": 634,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56,
											"end": 634,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 56,
											"end": 634,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56,
											"end": 634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 56,
											"end": 634,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56,
											"end": 634,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56,
											"end": 634,
											"name": "PUSH",
											"source": 0,
											"value": "91F90157"
										},
										{
											"begin": 56,
											"end": 634,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56,
											"end": 634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56,
											"end": 634,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56,
											"end": 634,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56,
											"end": 634,
											"name": "PUSH",
											"source": 0,
											"value": "C5CAFC2A"
										},
										{
											"begin": 56,
											"end": 634,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56,
											"end": 634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 56,
											"end": 634,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56,
											"end": 634,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56,
											"end": 634,
											"name": "PUSH",
											"source": 0,
											"value": "D57BDE79"
										},
										{
											"begin": 56,
											"end": 634,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56,
											"end": 634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 56,
											"end": 634,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56,
											"end": 634,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 56,
											"end": 634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56,
											"end": 634,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 634,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56,
											"end": 634,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 286,
											"end": 549,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 286,
											"end": 549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 286,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 286,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 286,
											"end": 549,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 286,
											"end": 549,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 286,
											"end": 549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 286,
											"end": 549,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 79,
											"end": 99,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 79,
											"end": 99,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79,
											"end": 99,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 79,
											"end": 99,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79,
											"end": 99,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 79,
											"end": 99,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 79,
											"end": 99,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79,
											"end": 99,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 79,
											"end": 99,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79,
											"end": 99,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 79,
											"end": 99,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 79,
											"end": 99,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 79,
											"end": 99,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 79,
											"end": 99,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 79,
											"end": 99,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 79,
											"end": 99,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 79,
											"end": 99,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 79,
											"end": 99,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 79,
											"end": 99,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79,
											"end": 99,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 79,
											"end": 99,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79,
											"end": 99,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 79,
											"end": 99,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 373,
											"end": 405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 373,
											"end": 405,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 373,
											"end": 405,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 355,
											"end": 406,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 355,
											"end": 406,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 343,
											"end": 345,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 328,
											"end": 346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 79,
											"end": 99,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 79,
											"end": 99,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79,
											"end": 99,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 79,
											"end": 99,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 79,
											"end": 99,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79,
											"end": 99,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 79,
											"end": 99,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 79,
											"end": 99,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79,
											"end": 99,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 136,
											"end": 164,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 136,
											"end": 164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 136,
											"end": 164,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 136,
											"end": 164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 136,
											"end": 164,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 136,
											"end": 164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 136,
											"end": 164,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 136,
											"end": 164,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 136,
											"end": 164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 136,
											"end": 164,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 136,
											"end": 164,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 136,
											"end": 164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 136,
											"end": 164,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 136,
											"end": 164,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 136,
											"end": 164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 136,
											"end": 164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 136,
											"end": 164,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 136,
											"end": 164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 136,
											"end": 164,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 555,
											"end": 632,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 555,
											"end": 632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 555,
											"end": 632,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 555,
											"end": 632,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 555,
											"end": 632,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 555,
											"end": 632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 555,
											"end": 632,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 555,
											"end": 632,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 555,
											"end": 632,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 555,
											"end": 632,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 555,
											"end": 632,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 555,
											"end": 632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 555,
											"end": 632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 555,
											"end": 632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 555,
											"end": 632,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 555,
											"end": 632,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 555,
											"end": 632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 555,
											"end": 632,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 555,
											"end": 632,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 555,
											"end": 632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 555,
											"end": 632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 555,
											"end": 632,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 105,
											"end": 130,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 105,
											"end": 130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 105,
											"end": 130,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 105,
											"end": 130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 105,
											"end": 130,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 105,
											"end": 130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 105,
											"end": 130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 105,
											"end": 130,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 105,
											"end": 130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 105,
											"end": 130,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 105,
											"end": 130,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 105,
											"end": 130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 105,
											"end": 130,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 105,
											"end": 130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 105,
											"end": 130,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 105,
											"end": 130,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 105,
											"end": 130,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 105,
											"end": 130,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 105,
											"end": 130,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 105,
											"end": 130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 105,
											"end": 130,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 105,
											"end": 130,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1357,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1320,
											"end": 1322,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1305,
											"end": 1323,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 105,
											"end": 130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1287,
											"end": 1363,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 286,
											"end": 549,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 286,
											"end": 549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 346,
											"end": 356,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 346,
											"end": 356,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 334,
											"end": 343,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 334,
											"end": 356,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 326,
											"end": 407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 326,
											"end": 407,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 326,
											"end": 407,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 326,
											"end": 407,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 326,
											"end": 407,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 326,
											"end": 407,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 973,
											"end": 975,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 326,
											"end": 407,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 326,
											"end": 407,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 326,
											"end": 407,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 955,
											"end": 976,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1012,
											"end": 1014,
											"name": "PUSH",
											"source": 1,
											"value": "2E"
										},
										{
											"begin": 992,
											"end": 1010,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 992,
											"end": 1010,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 992,
											"end": 1010,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 985,
											"end": 1015,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1085,
											"name": "PUSH",
											"source": 1,
											"value": "42696420616D6F756E742073686F756C64206265206772656174657220746861"
										},
										{
											"begin": 1031,
											"end": 1049,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1031,
											"end": 1049,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1031,
											"end": 1049,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1024,
											"end": 1086,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37103434B3B432B9BA103134B217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "91"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1102,
											"end": 1120,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1102,
											"end": 1120,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1102,
											"end": 1120,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1095,
											"end": 1139,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1175,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1156,
											"end": 1175,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 326,
											"end": 407,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 326,
											"end": 407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 326,
											"end": 407,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 326,
											"end": 407,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 326,
											"end": 407,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 326,
											"end": 407,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 326,
											"end": 407,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 326,
											"end": 407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 326,
											"end": 407,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 326,
											"end": 407,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 326,
											"end": 407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 439,
											"end": 444,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 439,
											"end": 444,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 439,
											"end": 444,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 425,
											"end": 435,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 425,
											"end": 444,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 425,
											"end": 444,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 417,
											"end": 474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 417,
											"end": 474,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 417,
											"end": 474,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 417,
											"end": 474,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 417,
											"end": 474,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 417,
											"end": 474,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 619,
											"end": 621,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 417,
											"end": 474,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 417,
											"end": 474,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 417,
											"end": 474,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 601,
											"end": 622,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 658,
											"end": 660,
											"name": "PUSH",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 638,
											"end": 656,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 638,
											"end": 656,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 638,
											"end": 656,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 631,
											"end": 661,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 697,
											"end": 724,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E65722063616E6E6F7420706C6163652061206269642E00000000000000"
										},
										{
											"begin": 677,
											"end": 695,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 677,
											"end": 695,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 677,
											"end": 695,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 670,
											"end": 725,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 742,
											"end": 760,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 742,
											"end": 760,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 417,
											"end": 474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 591,
											"end": 766,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 474,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 417,
											"end": 474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 497,
											"end": 506,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 484,
											"end": 494,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 484,
											"end": 506,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 516,
											"end": 529,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 516,
											"end": 542,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 516,
											"end": 542,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 516,
											"end": 542,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 532,
											"end": 542,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 516,
											"end": 542,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 516,
											"end": 542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 516,
											"end": 542,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 286,
											"end": 549,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 555,
											"end": 632,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 555,
											"end": 632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 618,
											"end": 624,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 610,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 610,
											"end": 625,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 610,
											"end": 625,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 610,
											"end": 625,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 610,
											"end": 625,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 610,
											"end": 625,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 610,
											"end": 625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 555,
											"end": 632,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 555,
											"end": 632,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 204,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 14,
											"end": 204,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 96,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 94,
											"end": 96,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 94,
											"end": 96,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 147,
											"end": 153,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 145,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 132,
											"end": 154,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 96,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 94,
											"end": 96,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 175,
											"end": 198,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 175,
											"end": 198,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 84,
											"end": 204,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 84,
											"end": 204,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"bid()": "1998aeef",
							"checkNonZero(uint256)": "c5cafc2a",
							"highestBid()": "d57bde79",
							"highestBidder()": "91f90157",
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"bid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"}],\"name\":\"checkNonZero\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"highestBid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"highestBidder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Unsigned Integer Types Optimizer/test23.sol\":\"Auction\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Unsigned Integer Types Optimizer/test23.sol\":{\"keccak256\":\"0x5a4d3985b5ccfee2aa3e6eb1e3329ca52c0b4469e9dabac7e5d800276d81f7ce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eadc86c1f6de83b3a46b7c54f3879cedc254497aca7b7dabbcccb0dd176cc1e0\",\"dweb:/ipfs/QmVKjsYZ92BBF53BpsDWPVjoumnuz9unpc622biHoDTkX6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "Unsigned Integer Types Optimizer/test23.sol:Auction",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 5,
								"contract": "Unsigned Integer Types Optimizer/test23.sol:Auction",
								"label": "highestBid",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 7,
								"contract": "Unsigned Integer Types Optimizer/test23.sol:Auction",
								"label": "highestBidder",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Unsigned Integer Types Optimizer/test23.sol": {
				"ast": {
					"absolutePath": "Unsigned Integer Types Optimizer/test23.sol",
					"exportedSymbols": {
						"Auction": [
							70
						]
					},
					"id": 71,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 70,
							"linearizedBaseContracts": [
								70
							],
							"name": "Auction",
							"nameLocation": "65:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 3,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "94:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 70,
									"src": "79:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "79:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d57bde79",
									"id": 5,
									"mutability": "mutable",
									"name": "highestBid",
									"nameLocation": "120:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 70,
									"src": "105:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "105:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "91f90157",
									"id": 7,
									"mutability": "mutable",
									"name": "highestBidder",
									"nameLocation": "151:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 70,
									"src": "136:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "136:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 26,
										"nodeType": "Block",
										"src": "185:95:0",
										"statements": [
											{
												"expression": {
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 10,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "195:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 11,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "203:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "203:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "195:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 14,
												"nodeType": "ExpressionStatement",
												"src": "195:18:0"
											},
											{
												"expression": {
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 15,
														"name": "highestBid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "223:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 16,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "236:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "223:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 18,
												"nodeType": "ExpressionStatement",
												"src": "223:14:0"
											},
											{
												"expression": {
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 19,
														"name": "highestBidder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "247:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 22,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "271:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 21,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "263:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 20,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "263:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 23,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "263:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "247:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 25,
												"nodeType": "ExpressionStatement",
												"src": "247:26:0"
											}
										]
									},
									"id": 27,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "182:2:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "185:0:0"
									},
									"scope": 70,
									"src": "171:109:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 56,
										"nodeType": "Block",
										"src": "316:233:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 34,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 31,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "334:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 32,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "334:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 33,
																"name": "highestBid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "346:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "334:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42696420616d6f756e742073686f756c642062652067726561746572207468616e2068696768657374206269642e",
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "358:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_efc563b815b2f6c418998c58d025884753717a2015320b884119923ec285e294",
																"typeString": "literal_string \"Bid amount should be greater than highest bid.\""
															},
															"value": "Bid amount should be greater than highest bid."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_efc563b815b2f6c418998c58d025884753717a2015320b884119923ec285e294",
																"typeString": "literal_string \"Bid amount should be greater than highest bid.\""
															}
														],
														"id": 30,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "326:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "326:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "326:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 39,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "425:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 40,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "425:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 41,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "439:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "425:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e65722063616e6e6f7420706c6163652061206269642e",
															"id": 43,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "446:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a93add91eb37767ab66dfdeca5103d0aeeb3c19641a8bfebbf815b374db1986a",
																"typeString": "literal_string \"Owner cannot place a bid.\""
															},
															"value": "Owner cannot place a bid."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a93add91eb37767ab66dfdeca5103d0aeeb3c19641a8bfebbf815b374db1986a",
																"typeString": "literal_string \"Owner cannot place a bid.\""
															}
														],
														"id": 38,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "417:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "417:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 45,
												"nodeType": "ExpressionStatement",
												"src": "417:57:0"
											},
											{
												"expression": {
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 46,
														"name": "highestBid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "484:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 47,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "497:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 48,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "497:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "484:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 50,
												"nodeType": "ExpressionStatement",
												"src": "484:22:0"
											},
											{
												"expression": {
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 51,
														"name": "highestBidder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "516:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 52,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "532:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 53,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "532:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "516:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "516:26:0"
											}
										]
									},
									"functionSelector": "1998aeef",
									"id": 57,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "bid",
									"nameLocation": "295:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "298:2:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "316:0:0"
									},
									"scope": 70,
									"src": "286:263:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 68,
										"nodeType": "Block",
										"src": "600:32:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 65,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 63,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 59,
																"src": "618:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "623:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "618:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 62,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "610:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "610:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 67,
												"nodeType": "ExpressionStatement",
												"src": "610:15:0"
											}
										]
									},
									"functionSelector": "c5cafc2a",
									"id": 69,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkNonZero",
									"nameLocation": "564:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "585:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "577:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "577:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "576:11:0"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "600:0:0"
									},
									"scope": 70,
									"src": "555:77:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 71,
							"src": "56:578:0",
							"usedErrors": []
						}
					],
					"src": "32:603:0"
				},
				"id": 0
			}
		}
	}
}