{
	"id": "b7cd757679a7a51de9fe0755daa6bef9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.4",
	"solcLongVersion": "0.8.4+commit.c7e474f2",
	"input": {
		"language": "Solidity",
		"sources": {
			"Packing Variables into a single block Optimizer/optimized_test30.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity 0.8.4;\n\ncontract ArraySum {\nuint128 a;\nuint128 c;\nuint256 b;\nuint256[] values;\n\nconstructor() {\n    values.push(uint256(a));\n    values.push(b);\n    values.push(uint256(c));\n}\n\nfunction sum() public view returns(uint256) {\n    uint256 total = 0;\n    for(uint256 i = 0; i < values.length; i++) {\n        total += values[i];\n    }\n    return total;\n}\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Packing Variables into a single block Optimizer/optimized_test30.sol": {
				"ArraySum": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "sum",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Packing Variables into a single block Optimizer/optimized_test30.sol\":63:405  contract ArraySum {... */\n  mstore(0x40, 0x80)\n    /* \"Packing Variables into a single block Optimizer/optimized_test30.sol\":135:230  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Packing Variables into a single block Optimizer/optimized_test30.sol\":155:161  values */\n  0x02\n    /* \"Packing Variables into a single block Optimizer/optimized_test30.sol\":175:176  a */\n  0x00\n  dup1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffff\n  and\n    /* \"Packing Variables into a single block Optimizer/optimized_test30.sol\":167:177  uint256(a) */\n  0xffffffffffffffffffffffffffffffff\n  and\n    /* \"Packing Variables into a single block Optimizer/optimized_test30.sol\":155:178  values.push(uint256(a)) */\n  swap1\n  dup1\n  0x01\n  dup2\n  sload\n  add\n  dup1\n  dup3\n  sstore\n  dup1\n  swap2\n  pop\n  pop\n  0x01\n  swap1\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  add\n  0x00\n  swap1\n  swap2\n  swap1\n  swap2\n  swap1\n  swap2\n  pop\n  sstore\n    /* \"Packing Variables into a single block Optimizer/optimized_test30.sol\":184:190  values */\n  0x02\n    /* \"Packing Variables into a single block Optimizer/optimized_test30.sol\":196:197  b */\n  sload(0x01)\n    /* \"Packing Variables into a single block Optimizer/optimized_test30.sol\":184:198  values.push(b) */\n  swap1\n  dup1\n  0x01\n  dup2\n  sload\n  add\n  dup1\n  dup3\n  sstore\n  dup1\n  swap2\n  pop\n  pop\n  0x01\n  swap1\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  add\n  0x00\n  swap1\n  swap2\n  swap1\n  swap2\n  swap1\n  swap2\n  pop\n  sstore\n    /* \"Packing Variables into a single block Optimizer/optimized_test30.sol\":204:210  values */\n  0x02\n    /* \"Packing Variables into a single block Optimizer/optimized_test30.sol\":224:225  c */\n  0x00\n  0x10\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffff\n  and\n    /* \"Packing Variables into a single block Optimizer/optimized_test30.sol\":216:226  uint256(c) */\n  0xffffffffffffffffffffffffffffffff\n  and\n    /* \"Packing Variables into a single block Optimizer/optimized_test30.sol\":204:227  values.push(uint256(c)) */\n  swap1\n  dup1\n  0x01\n  dup2\n  sload\n  add\n  dup1\n  dup3\n  sstore\n  dup1\n  swap2\n  pop\n  pop\n  0x01\n  swap1\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  add\n  0x00\n  swap1\n  swap2\n  swap1\n  swap2\n  swap1\n  swap2\n  pop\n  sstore\n    /* \"Packing Variables into a single block Optimizer/optimized_test30.sol\":63:405  contract ArraySum {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Packing Variables into a single block Optimizer/optimized_test30.sol\":63:405  contract ArraySum {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x853255cc\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Packing Variables into a single block Optimizer/optimized_test30.sol\":232:403  function sum() public view returns(uint256) {... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_5:\n        /* \"Packing Variables into a single block Optimizer/optimized_test30.sol\":267:274  uint256 */\n      0x00\n        /* \"Packing Variables into a single block Optimizer/optimized_test30.sol\":282:295  uint256 total */\n      dup1\n        /* \"Packing Variables into a single block Optimizer/optimized_test30.sol\":298:299  0 */\n      0x00\n        /* \"Packing Variables into a single block Optimizer/optimized_test30.sol\":282:299  uint256 total = 0 */\n      swap1\n      pop\n        /* \"Packing Variables into a single block Optimizer/optimized_test30.sol\":309:318  uint256 i */\n      0x00\n        /* \"Packing Variables into a single block Optimizer/optimized_test30.sol\":305:383  for(uint256 i = 0; i < values.length; i++) {... */\n    tag_9:\n        /* \"Packing Variables into a single block Optimizer/optimized_test30.sol\":328:334  values */\n      0x02\n        /* \"Packing Variables into a single block Optimizer/optimized_test30.sol\":328:341  values.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Packing Variables into a single block Optimizer/optimized_test30.sol\":324:325  i */\n      dup2\n        /* \"Packing Variables into a single block Optimizer/optimized_test30.sol\":324:341  i < values.length */\n      lt\n        /* \"Packing Variables into a single block Optimizer/optimized_test30.sol\":305:383  for(uint256 i = 0; i < values.length; i++) {... */\n      iszero\n      tag_10\n      jumpi\n        /* \"Packing Variables into a single block Optimizer/optimized_test30.sol\":367:373  values */\n      0x02\n        /* \"Packing Variables into a single block Optimizer/optimized_test30.sol\":374:375  i */\n      dup2\n        /* \"Packing Variables into a single block Optimizer/optimized_test30.sol\":367:376  values[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_12\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_12:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"Packing Variables into a single block Optimizer/optimized_test30.sol\":358:376  total += values[i] */\n      dup3\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      swap2\n      pop\n        /* \"Packing Variables into a single block Optimizer/optimized_test30.sol\":343:346  i++ */\n      dup1\n      dup1\n      tag_16\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      swap2\n      pop\n      pop\n        /* \"Packing Variables into a single block Optimizer/optimized_test30.sol\":305:383  for(uint256 i = 0; i < values.length; i++) {... */\n      jump(tag_9)\n    tag_10:\n      pop\n        /* \"Packing Variables into a single block Optimizer/optimized_test30.sol\":395:400  total */\n      dup1\n        /* \"Packing Variables into a single block Optimizer/optimized_test30.sol\":388:400  return total */\n      swap2\n      pop\n      pop\n        /* \"Packing Variables into a single block Optimizer/optimized_test30.sol\":232:403  function sum() public view returns(uint256) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:125   */\n    tag_19:\n        /* \"#utility.yul\":94:118   */\n      tag_21\n        /* \"#utility.yul\":112:117   */\n      dup2\n        /* \"#utility.yul\":94:118   */\n      tag_22\n      jump\t// in\n    tag_21:\n        /* \"#utility.yul\":89:92   */\n      dup3\n        /* \"#utility.yul\":82:119   */\n      mstore\n        /* \"#utility.yul\":72:125   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":131:353   */\n    tag_7:\n        /* \"#utility.yul\":224:228   */\n      0x00\n        /* \"#utility.yul\":262:264   */\n      0x20\n        /* \"#utility.yul\":251:260   */\n      dup3\n        /* \"#utility.yul\":247:265   */\n      add\n        /* \"#utility.yul\":239:265   */\n      swap1\n      pop\n        /* \"#utility.yul\":275:346   */\n      tag_24\n        /* \"#utility.yul\":343:344   */\n      0x00\n        /* \"#utility.yul\":332:341   */\n      dup4\n        /* \"#utility.yul\":328:345   */\n      add\n        /* \"#utility.yul\":319:325   */\n      dup5\n        /* \"#utility.yul\":275:346   */\n      tag_19\n      jump\t// in\n    tag_24:\n        /* \"#utility.yul\":229:353   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":359:664   */\n    tag_15:\n        /* \"#utility.yul\":399:402   */\n      0x00\n        /* \"#utility.yul\":418:438   */\n      tag_26\n        /* \"#utility.yul\":436:437   */\n      dup3\n        /* \"#utility.yul\":418:438   */\n      tag_22\n      jump\t// in\n    tag_26:\n        /* \"#utility.yul\":413:438   */\n      swap2\n      pop\n        /* \"#utility.yul\":452:472   */\n      tag_27\n        /* \"#utility.yul\":470:471   */\n      dup4\n        /* \"#utility.yul\":452:472   */\n      tag_22\n      jump\t// in\n    tag_27:\n        /* \"#utility.yul\":447:472   */\n      swap3\n      pop\n        /* \"#utility.yul\":606:607   */\n      dup3\n        /* \"#utility.yul\":538:604   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":534:608   */\n      sub\n        /* \"#utility.yul\":531:532   */\n      dup3\n        /* \"#utility.yul\":528:609   */\n      gt\n        /* \"#utility.yul\":525:527   */\n      iszero\n      tag_28\n      jumpi\n        /* \"#utility.yul\":612:630   */\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":525:527   */\n    tag_28:\n        /* \"#utility.yul\":656:657   */\n      dup3\n        /* \"#utility.yul\":653:654   */\n      dup3\n        /* \"#utility.yul\":649:658   */\n      add\n        /* \"#utility.yul\":642:658   */\n      swap1\n      pop\n        /* \"#utility.yul\":403:664   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":670:747   */\n    tag_22:\n        /* \"#utility.yul\":707:714   */\n      0x00\n        /* \"#utility.yul\":736:741   */\n      dup2\n        /* \"#utility.yul\":725:741   */\n      swap1\n      pop\n        /* \"#utility.yul\":715:747   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":753:986   */\n    tag_17:\n        /* \"#utility.yul\":792:795   */\n      0x00\n        /* \"#utility.yul\":815:839   */\n      tag_33\n        /* \"#utility.yul\":833:838   */\n      dup3\n        /* \"#utility.yul\":815:839   */\n      tag_22\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":806:839   */\n      swap2\n      pop\n        /* \"#utility.yul\":861:927   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":854:859   */\n      dup3\n        /* \"#utility.yul\":851:928   */\n      eq\n        /* \"#utility.yul\":848:850   */\n      iszero\n      tag_34\n      jumpi\n        /* \"#utility.yul\":931:949   */\n      tag_35\n      tag_30\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":848:850   */\n    tag_34:\n        /* \"#utility.yul\":978:979   */\n      0x01\n        /* \"#utility.yul\":971:976   */\n      dup3\n        /* \"#utility.yul\":967:980   */\n      add\n        /* \"#utility.yul\":960:980   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:986   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":992:1172   */\n    tag_30:\n        /* \"#utility.yul\":1040:1117   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1037:1038   */\n      0x00\n        /* \"#utility.yul\":1030:1118   */\n      mstore\n        /* \"#utility.yul\":1137:1141   */\n      0x11\n        /* \"#utility.yul\":1134:1135   */\n      0x04\n        /* \"#utility.yul\":1127:1142   */\n      mstore\n        /* \"#utility.yul\":1161:1165   */\n      0x24\n        /* \"#utility.yul\":1158:1159   */\n      0x00\n        /* \"#utility.yul\":1151:1166   */\n      revert\n\n    auxdata: 0xa264697066735822122086702393d4432b579382b2584fe6dbacca9fd2c72b3ba28bfb7c7db4b936626264736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600260008054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff169080600181540180825580915050600190039060005260206000200160009091909190915055600260015490806001815401808255809150506001900390600052602060002001600090919091909150556002600060109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16908060018154018082558091505060019003906000526020600020016000909190919091505561020a806100fb6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063853255cc14610030575b600080fd5b61003861004e565b60405161004591906100e1565b60405180910390f35b6000806000905060005b6002805490508110156100ca576002818154811061009f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154826100b591906100fc565b915080806100c29061015c565b915050610058565b508091505090565b6100db81610152565b82525050565b60006020820190506100f660008301846100d2565b92915050565b600061010782610152565b915061011283610152565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610147576101466101a5565b5b828201905092915050565b6000819050919050565b600061016782610152565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561019a576101996101a5565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea264697066735822122086702393d4432b579382b2584fe6dbacca9fd2c72b3ba28bfb7c7db4b936626264736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH1 0x2 PUSH1 0x1 SLOAD SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH1 0x2 PUSH1 0x0 PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH2 0x20A DUP1 PUSH2 0xFB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x853255CC EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45 SWAP2 SWAP1 PUSH2 0xE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xCA JUMPI PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x9F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP3 PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0xFC JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0xC2 SWAP1 PUSH2 0x15C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x58 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0xDB DUP2 PUSH2 0x152 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x107 DUP3 PUSH2 0x152 JUMP JUMPDEST SWAP2 POP PUSH2 0x112 DUP4 PUSH2 0x152 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x147 JUMPI PUSH2 0x146 PUSH2 0x1A5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x167 DUP3 PUSH2 0x152 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x19A JUMPI PUSH2 0x199 PUSH2 0x1A5 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 PUSH17 0x2393D4432B579382B2584FE6DBACCA9FD2 0xC7 0x2B EXTCODESIZE LOG2 DUP12 0xFB PUSH29 0x7DB4B936626264736F6C63430008040033000000000000000000000000 ",
							"sourceMap": "63:342:0:-:0;;;135:95;;;;;;;;;;155:6;175:1;;;;;;;;;;167:10;;155:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;184:6;196:1;;184:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;204:6;224:1;;;;;;;;;;;216:10;;204:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;63:342;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1175:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "72:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "89:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "112:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "94:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "94:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "82:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "82:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "60:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "67:3:1",
														"type": ""
													}
												],
												"src": "7:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "229:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "239:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "251:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "262:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "247:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "247:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "239:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "319:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "332:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "343:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "328:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "275:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "275:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "201:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "213:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "224:4:1",
														"type": ""
													}
												],
												"src": "131:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "403:261:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "413:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "436:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "418:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "418:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "413:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "447:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "470:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "452:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "452:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "447:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "610:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "612:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "612:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "612:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "531:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "538:66:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "606:1:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "534:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "534:74:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "528:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "528:81:1"
															},
															"nodeType": "YulIf",
															"src": "525:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "642:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "653:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "656:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "649:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "649:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "642:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "390:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "393:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "399:3:1",
														"type": ""
													}
												],
												"src": "359:305:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "715:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "725:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "736:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "725:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "697:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "707:7:1",
														"type": ""
													}
												],
												"src": "670:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "796:190:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "806:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "833:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "815:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "815:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "806:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "929:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "931:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "931:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "931:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "854:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "861:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "851:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "851:77:1"
															},
															"nodeType": "YulIf",
															"src": "848:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "960:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "971:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "978:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "967:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "967:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "960:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "782:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "792:3:1",
														"type": ""
													}
												],
												"src": "753:233:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1020:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1037:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1040:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1030:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1030:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1030:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1134:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1137:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1127:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1158:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1161:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1151:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1151:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1151:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "992:180:1"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063853255cc14610030575b600080fd5b61003861004e565b60405161004591906100e1565b60405180910390f35b6000806000905060005b6002805490508110156100ca576002818154811061009f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154826100b591906100fc565b915080806100c29061015c565b915050610058565b508091505090565b6100db81610152565b82525050565b60006020820190506100f660008301846100d2565b92915050565b600061010782610152565b915061011283610152565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610147576101466101a5565b5b828201905092915050565b6000819050919050565b600061016782610152565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561019a576101996101a5565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea264697066735822122086702393d4432b579382b2584fe6dbacca9fd2c72b3ba28bfb7c7db4b936626264736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x853255CC EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45 SWAP2 SWAP1 PUSH2 0xE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xCA JUMPI PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x9F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP3 PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0xFC JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0xC2 SWAP1 PUSH2 0x15C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x58 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0xDB DUP2 PUSH2 0x152 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x107 DUP3 PUSH2 0x152 JUMP JUMPDEST SWAP2 POP PUSH2 0x112 DUP4 PUSH2 0x152 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x147 JUMPI PUSH2 0x146 PUSH2 0x1A5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x167 DUP3 PUSH2 0x152 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x19A JUMPI PUSH2 0x199 PUSH2 0x1A5 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 PUSH17 0x2393D4432B579382B2584FE6DBACCA9FD2 0xC7 0x2B EXTCODESIZE LOG2 DUP12 0xFB PUSH29 0x7DB4B936626264736F6C63430008040033000000000000000000000000 ",
							"sourceMap": "63:342:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;232:171;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;267:7;282:13;298:1;282:17;;309:9;305:78;328:6;:13;;;;324:1;:17;305:78;;;367:6;374:1;367:9;;;;;;;;;;;;;;;;;;;;;;;;358:18;;;;;:::i;:::-;;;343:3;;;;;:::i;:::-;;;;305:78;;;;395:5;388:12;;;232:171;:::o;7:118:1:-;94:24;112:5;94:24;:::i;:::-;89:3;82:37;72:53;;:::o;131:222::-;224:4;262:2;251:9;247:18;239:26;;275:71;343:1;332:9;328:17;319:6;275:71;:::i;:::-;229:124;;;;:::o;359:305::-;399:3;418:20;436:1;418:20;:::i;:::-;413:25;;452:20;470:1;452:20;:::i;:::-;447:25;;606:1;538:66;534:74;531:1;528:81;525:2;;;612:18;;:::i;:::-;525:2;656:1;653;649:9;642:16;;403:261;;;;:::o;670:77::-;707:7;736:5;725:16;;715:32;;;:::o;753:233::-;792:3;815:24;833:5;815:24;:::i;:::-;806:33;;861:66;854:5;851:77;848:2;;;931:18;;:::i;:::-;848:2;978:1;971:5;967:13;960:20;;796:190;;;:::o;992:180::-;1040:77;1037:1;1030:88;1137:4;1134:1;1127:15;1161:4;1158:1;1151:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "104400",
								"executionCost": "125453",
								"totalCost": "229853"
							},
							"external": {
								"sum()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 63,
									"end": 405,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 63,
									"end": 405,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 63,
									"end": 405,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 135,
									"end": 230,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 135,
									"end": 230,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 135,
									"end": 230,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 135,
									"end": 230,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 135,
									"end": 230,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 135,
									"end": 230,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 135,
									"end": 230,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 135,
									"end": 230,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 135,
									"end": 230,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 135,
									"end": 230,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 135,
									"end": 230,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 155,
									"end": 161,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 175,
									"end": 176,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 175,
									"end": 176,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 175,
									"end": 176,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 175,
									"end": 176,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 175,
									"end": 176,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 175,
									"end": 176,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 175,
									"end": 176,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 175,
									"end": 176,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 175,
									"end": 176,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 175,
									"end": 176,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 167,
									"end": 177,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 167,
									"end": 177,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 155,
									"end": 178,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 155,
									"end": 178,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 155,
									"end": 178,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 155,
									"end": 178,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 155,
									"end": 178,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 155,
									"end": 178,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 155,
									"end": 178,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 155,
									"end": 178,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 155,
									"end": 178,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 155,
									"end": 178,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 155,
									"end": 178,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 155,
									"end": 178,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 155,
									"end": 178,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 155,
									"end": 178,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 155,
									"end": 178,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 155,
									"end": 178,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 155,
									"end": 178,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 155,
									"end": 178,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 155,
									"end": 178,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 155,
									"end": 178,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 155,
									"end": 178,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 155,
									"end": 178,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 155,
									"end": 178,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 155,
									"end": 178,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 155,
									"end": 178,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 155,
									"end": 178,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 155,
									"end": 178,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 155,
									"end": 178,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 155,
									"end": 178,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 155,
									"end": 178,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 155,
									"end": 178,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 155,
									"end": 178,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 184,
									"end": 190,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 196,
									"end": 197,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 196,
									"end": 197,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 184,
									"end": 198,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 198,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 198,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 184,
									"end": 198,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 184,
									"end": 198,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 184,
									"end": 198,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 184,
									"end": 198,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 198,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 184,
									"end": 198,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 184,
									"end": 198,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 198,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 184,
									"end": 198,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 184,
									"end": 198,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 184,
									"end": 198,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 184,
									"end": 198,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 198,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 184,
									"end": 198,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 198,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 184,
									"end": 198,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 184,
									"end": 198,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 184,
									"end": 198,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 184,
									"end": 198,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 184,
									"end": 198,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 184,
									"end": 198,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 184,
									"end": 198,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 198,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 184,
									"end": 198,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 198,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 184,
									"end": 198,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 184,
									"end": 198,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 184,
									"end": 198,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 184,
									"end": 198,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 204,
									"end": 210,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 224,
									"end": 225,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 225,
									"name": "PUSH",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 224,
									"end": 225,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 224,
									"end": 225,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 224,
									"end": 225,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 224,
									"end": 225,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 224,
									"end": 225,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 224,
									"end": 225,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 224,
									"end": 225,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 224,
									"end": 225,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 224,
									"end": 225,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 216,
									"end": 226,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 216,
									"end": 226,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 204,
									"end": 227,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 204,
									"end": 227,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 204,
									"end": 227,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 204,
									"end": 227,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 204,
									"end": 227,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 204,
									"end": 227,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 204,
									"end": 227,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 204,
									"end": 227,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 204,
									"end": 227,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 204,
									"end": 227,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 204,
									"end": 227,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 204,
									"end": 227,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 204,
									"end": 227,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 204,
									"end": 227,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 204,
									"end": 227,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 204,
									"end": 227,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 204,
									"end": 227,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 204,
									"end": 227,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 204,
									"end": 227,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 204,
									"end": 227,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 204,
									"end": 227,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 204,
									"end": 227,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 204,
									"end": 227,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 204,
									"end": 227,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 204,
									"end": 227,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 204,
									"end": 227,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 204,
									"end": 227,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 204,
									"end": 227,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 204,
									"end": 227,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 204,
									"end": 227,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 204,
									"end": 227,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 204,
									"end": 227,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 63,
									"end": 405,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 405,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 63,
									"end": 405,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 405,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 405,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 63,
									"end": 405,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 405,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122086702393d4432b579382b2584fe6dbacca9fd2c72b3ba28bfb7c7db4b936626264736f6c63430008040033",
									".code": [
										{
											"begin": 63,
											"end": 405,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 63,
											"end": 405,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 63,
											"end": 405,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 63,
											"end": 405,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 63,
											"end": 405,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 405,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 63,
											"end": 405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 63,
											"end": 405,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 405,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 405,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 405,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 63,
											"end": 405,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 63,
											"end": 405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63,
											"end": 405,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 63,
											"end": 405,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 63,
											"end": 405,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 63,
											"end": 405,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 63,
											"end": 405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 63,
											"end": 405,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 405,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 405,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 63,
											"end": 405,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 63,
											"end": 405,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 63,
											"end": 405,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 405,
											"name": "PUSH",
											"source": 0,
											"value": "853255CC"
										},
										{
											"begin": 63,
											"end": 405,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 63,
											"end": 405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 63,
											"end": 405,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 405,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 63,
											"end": 405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63,
											"end": 405,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 405,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 405,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 232,
											"end": 403,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 232,
											"end": 403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 232,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 232,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 232,
											"end": 403,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 232,
											"end": 403,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 232,
											"end": 403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 232,
											"end": 403,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 232,
											"end": 403,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 232,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 232,
											"end": 403,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 232,
											"end": 403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 232,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 232,
											"end": 403,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 232,
											"end": 403,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 232,
											"end": 403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 232,
											"end": 403,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 232,
											"end": 403,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 232,
											"end": 403,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 232,
											"end": 403,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 232,
											"end": 403,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 232,
											"end": 403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 232,
											"end": 403,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 232,
											"end": 403,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 232,
											"end": 403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 267,
											"end": 274,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 282,
											"end": 295,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 298,
											"end": 299,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 282,
											"end": 299,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 282,
											"end": 299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 309,
											"end": 318,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 305,
											"end": 383,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 305,
											"end": 383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 328,
											"end": 334,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 328,
											"end": 341,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 328,
											"end": 341,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 328,
											"end": 341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 328,
											"end": 341,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 324,
											"end": 325,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 324,
											"end": 341,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 305,
											"end": 383,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 305,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 305,
											"end": 383,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 367,
											"end": 373,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 374,
											"end": 375,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 367,
											"end": 376,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 367,
											"end": 376,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 367,
											"end": 376,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 367,
											"end": 376,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 367,
											"end": 376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 367,
											"end": 376,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 367,
											"end": 376,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 367,
											"end": 376,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 367,
											"end": 376,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 367,
											"end": 376,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 367,
											"end": 376,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 367,
											"end": 376,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 367,
											"end": 376,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 367,
											"end": 376,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 367,
											"end": 376,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 367,
											"end": 376,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 367,
											"end": 376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 367,
											"end": 376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 367,
											"end": 376,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 367,
											"end": 376,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 367,
											"end": 376,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 367,
											"end": 376,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 367,
											"end": 376,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 367,
											"end": 376,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 367,
											"end": 376,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 358,
											"end": 376,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 358,
											"end": 376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 358,
											"end": 376,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 358,
											"end": 376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 358,
											"end": 376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 358,
											"end": 376,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 358,
											"end": 376,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 358,
											"end": 376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 358,
											"end": 376,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 358,
											"end": 376,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 343,
											"end": 346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 343,
											"end": 346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 343,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 343,
											"end": 346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 343,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 343,
											"end": 346,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 343,
											"end": 346,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 343,
											"end": 346,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 343,
											"end": 346,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 343,
											"end": 346,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 343,
											"end": 346,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 305,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 305,
											"end": 383,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 305,
											"end": 383,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 305,
											"end": 383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 305,
											"end": 383,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 395,
											"end": 400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 400,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 388,
											"end": 400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 388,
											"end": 400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 232,
											"end": 403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 232,
											"end": 403,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 125,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 7,
											"end": 125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 112,
											"end": 117,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 89,
											"end": 92,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 82,
											"end": 119,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 72,
											"end": 125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 72,
											"end": 125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 72,
											"end": 125,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 131,
											"end": 353,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 131,
											"end": 353,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 224,
											"end": 228,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 264,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 251,
											"end": 260,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 247,
											"end": 265,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 239,
											"end": 265,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 239,
											"end": 265,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 275,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 343,
											"end": 344,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 332,
											"end": 341,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 328,
											"end": 345,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 319,
											"end": 325,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 275,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 229,
											"end": 353,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 229,
											"end": 353,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 229,
											"end": 353,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 229,
											"end": 353,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 229,
											"end": 353,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 359,
											"end": 664,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 359,
											"end": 664,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 399,
											"end": 402,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 436,
											"end": 437,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 418,
											"end": 438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 418,
											"end": 438,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 418,
											"end": 438,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 418,
											"end": 438,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 413,
											"end": 438,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 413,
											"end": 438,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 452,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 470,
											"end": 471,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 452,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 452,
											"end": 472,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 452,
											"end": 472,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 452,
											"end": 472,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 447,
											"end": 472,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 447,
											"end": 472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 606,
											"end": 607,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 538,
											"end": 604,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 534,
											"end": 608,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 531,
											"end": 532,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 528,
											"end": 609,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 525,
											"end": 527,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 525,
											"end": 527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 525,
											"end": 527,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 612,
											"end": 630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 612,
											"end": 630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 612,
											"end": 630,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 612,
											"end": 630,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 612,
											"end": 630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 525,
											"end": 527,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 525,
											"end": 527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 656,
											"end": 657,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 653,
											"end": 654,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 649,
											"end": 658,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 642,
											"end": 658,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 642,
											"end": 658,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 403,
											"end": 664,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 403,
											"end": 664,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 403,
											"end": 664,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 403,
											"end": 664,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 403,
											"end": 664,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 670,
											"end": 747,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 670,
											"end": 747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 707,
											"end": 714,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 741,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 725,
											"end": 741,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 725,
											"end": 741,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 715,
											"end": 747,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 715,
											"end": 747,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 715,
											"end": 747,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 715,
											"end": 747,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 753,
											"end": 986,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 753,
											"end": 986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 792,
											"end": 795,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 815,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 833,
											"end": 838,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 815,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 815,
											"end": 839,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 815,
											"end": 839,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 815,
											"end": 839,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 806,
											"end": 839,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 806,
											"end": 839,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 861,
											"end": 927,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 854,
											"end": 859,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 851,
											"end": 928,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 848,
											"end": 850,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 848,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 848,
											"end": 850,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 931,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 931,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 931,
											"end": 949,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 931,
											"end": 949,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 931,
											"end": 949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 848,
											"end": 850,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 848,
											"end": 850,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 978,
											"end": 979,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 971,
											"end": 976,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 967,
											"end": 980,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 960,
											"end": 980,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 960,
											"end": 980,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 796,
											"end": 986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 796,
											"end": 986,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 986,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 992,
											"end": 1172,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 992,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1040,
											"end": 1117,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1037,
											"end": 1038,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1141,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1134,
											"end": 1135,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1127,
											"end": 1142,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1165,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1158,
											"end": 1159,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1151,
											"end": 1166,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"sum()": "853255cc"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"sum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Packing Variables into a single block Optimizer/optimized_test30.sol\":\"ArraySum\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Packing Variables into a single block Optimizer/optimized_test30.sol\":{\"keccak256\":\"0xd80386750baac7fc6bc913abef99944eedb63e64937cae434da4c1d12754f299\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://1b063810e0de0c383578a3e21f383728efa2acd4470a759ed778df6e957ad4ca\",\"dweb:/ipfs/QmSzhGqwABREMfKrGv2CEhQiy2eHLpxNJEBC6qyZvBta6R\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "Packing Variables into a single block Optimizer/optimized_test30.sol:ArraySum",
								"label": "a",
								"offset": 0,
								"slot": "0",
								"type": "t_uint128"
							},
							{
								"astId": 5,
								"contract": "Packing Variables into a single block Optimizer/optimized_test30.sol:ArraySum",
								"label": "c",
								"offset": 16,
								"slot": "0",
								"type": "t_uint128"
							},
							{
								"astId": 7,
								"contract": "Packing Variables into a single block Optimizer/optimized_test30.sol:ArraySum",
								"label": "b",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 10,
								"contract": "Packing Variables into a single block Optimizer/optimized_test30.sol:ArraySum",
								"label": "values",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_uint256)dyn_storage"
							}
						],
						"types": {
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_uint128": {
								"encoding": "inplace",
								"label": "uint128",
								"numberOfBytes": "16"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Packing Variables into a single block Optimizer/optimized_test30.sol": {
				"ast": {
					"absolutePath": "Packing Variables into a single block Optimizer/optimized_test30.sol",
					"exportedSymbols": {
						"ArraySum": [
							70
						]
					},
					"id": 71,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "39:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 70,
							"linearizedBaseContracts": [
								70
							],
							"name": "ArraySum",
							"nameLocation": "72:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "a",
									"nameLocation": "91:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 70,
									"src": "83:9:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint128",
										"typeString": "uint128"
									},
									"typeName": {
										"id": 2,
										"name": "uint128",
										"nodeType": "ElementaryTypeName",
										"src": "83:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint128",
											"typeString": "uint128"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "c",
									"nameLocation": "102:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 70,
									"src": "94:9:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint128",
										"typeString": "uint128"
									},
									"typeName": {
										"id": 4,
										"name": "uint128",
										"nodeType": "ElementaryTypeName",
										"src": "94:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint128",
											"typeString": "uint128"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "b",
									"nameLocation": "113:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 70,
									"src": "105:9:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "105:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "values",
									"nameLocation": "126:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 70,
									"src": "116:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 8,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "116:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 9,
										"nodeType": "ArrayTypeName",
										"src": "116:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "149:81:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 18,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "175:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																],
																"id": 17,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "167:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 16,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "167:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "167:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 13,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "155:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 15,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "155:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "155:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "155:23:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 25,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "196:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 22,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "184:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 24,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "184:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "184:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "184:14:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 33,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "224:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																],
																"id": 32,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "216:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 31,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "216:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 34,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "216:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 28,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "204:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 30,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "204:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "204:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 36,
												"nodeType": "ExpressionStatement",
												"src": "204:23:0"
											}
										]
									},
									"id": 38,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "146:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "149:0:0"
									},
									"scope": 70,
									"src": "135:95:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 68,
										"nodeType": "Block",
										"src": "276:127:0",
										"statements": [
											{
												"assignments": [
													44
												],
												"declarations": [
													{
														"constant": false,
														"id": 44,
														"mutability": "mutable",
														"name": "total",
														"nameLocation": "290:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 68,
														"src": "282:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 43,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "282:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 46,
												"initialValue": {
													"hexValue": "30",
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "298:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "282:17:0"
											},
											{
												"body": {
													"id": 64,
													"nodeType": "Block",
													"src": "348:35:0",
													"statements": [
														{
															"expression": {
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 58,
																	"name": "total",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 44,
																	"src": "358:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 59,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 10,
																		"src": "367:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 61,
																	"indexExpression": {
																		"id": 60,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 48,
																		"src": "374:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "367:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "358:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 63,
															"nodeType": "ExpressionStatement",
															"src": "358:18:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 51,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "324:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 52,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "328:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 53,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "328:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "324:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 65,
												"initializationExpression": {
													"assignments": [
														48
													],
													"declarations": [
														{
															"constant": false,
															"id": 48,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "317:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 65,
															"src": "309:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 47,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "309:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 50,
													"initialValue": {
														"hexValue": "30",
														"id": 49,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "321:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "309:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "343:3:0",
														"subExpression": {
															"id": 55,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 48,
															"src": "343:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 57,
													"nodeType": "ExpressionStatement",
													"src": "343:3:0"
												},
												"nodeType": "ForStatement",
												"src": "305:78:0"
											},
											{
												"expression": {
													"id": 66,
													"name": "total",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 44,
													"src": "395:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 42,
												"id": 67,
												"nodeType": "Return",
												"src": "388:12:0"
											}
										]
									},
									"functionSelector": "853255cc",
									"id": 69,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sum",
									"nameLocation": "241:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "244:2:0"
									},
									"returnParameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "267:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "267:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "266:9:0"
									},
									"scope": 70,
									"src": "232:171:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 71,
							"src": "63:342:0",
							"usedErrors": []
						}
					],
					"src": "39:366:0"
				},
				"id": 0
			}
		}
	}
}